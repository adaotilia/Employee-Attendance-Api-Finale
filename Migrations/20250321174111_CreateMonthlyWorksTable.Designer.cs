// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations.Schema;
using Employee_Attendance_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee_Attendance_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321174111_CreateMonthlyWorksTable")]
    partial class CreateMonthlyWorksTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Employee_Attendance_Api.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsAdmin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.MonthlyWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("WorkedMinutes")
                        .HasColumnType("int")
                        .HasColumnName("WorkedMinutes");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MonthlyWorks");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.WorkHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CheckIn");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CheckOut");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkHours");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.Employee", b =>
                {
                    b.HasOne("Employee_Attendance_Api.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.MonthlyWork", b =>
                {
                    b.HasOne("Employee_Attendance_Api.Models.Employee", "Employee")
                        .WithMany("MonthlyWorks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.WorkHours", b =>
                {
                    b.HasOne("Employee_Attendance_Api.Models.Employee", "Employee")
                        .WithMany("WorkHours")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employee_Attendance_Api.Models.Employee", b =>
                {
                    b.Navigation("MonthlyWorks");

                    b.Navigation("WorkHours");
                });
#pragma warning restore 612, 618
        }
    }
}
